# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/8a291af5-0355-4be0-9cf9-73f51a9a7a27";
      fsType = "ext4";
    };

  fileSystems."/efi" =
    { device = "systemd-1";
      fsType = "autofs";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/6eecf27f-8738-4e9a-8a10-2a7b3d6971bc";
      fsType = "ext4";
    };

  fileSystems."/home/jack/host/dev" =
    { device = "udev";
      fsType = "devtmpfs";
    };

  fileSystems."/home/jack/host/proc" =
    { device = "proc";
      fsType = "proc";
    };

  fileSystems."/home/jack/host/run" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/home/jack/host/sys" =
    { device = "sysfs";
      fsType = "sysfs";
    };

  fileSystems."/home/jack/host/dev/pts" =
    { device = "devpts";
      fsType = "devpts";
    };

  fileSystems."/home/jack/host/dev/shm" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/home/jack/host/run/keys" =
    { device = "ramfs";
      fsType = "ramfs";
    };

  fileSystems."/home/jack/host/run/wrappers" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6E2F-0D07";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
